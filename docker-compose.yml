services:
  mysql:
    image: mysql:8.4
    # ✅ ลบ command เดิมออก (ไม่ต้องใช้ default-authentication-plugin อีกต่อไป)
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: "Asia/Bangkok"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "mysql -uroot -p\"$MYSQL_ROOT_PASSWORD\" -e 'SELECT 1' >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 90s

  rabbitmq:
    image: rabbitmq:3.13-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

  web:
    build: ./web
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - app-net
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST:-mysql}
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-${MYSQL_ROOT_PASSWORD}}
      DB_NAME: ${DB_NAME:-${MYSQL_DATABASE}}
      RABBIT_HOST: ${RABBIT_HOST:-rabbitmq}
      DISCORD_WEBHOOK: ${DISCORD_WEBHOOK:-}
    ports:
      - "8080:8080"

  worker:
    build: ./worker
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - app-net
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST:-mysql}
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-${MYSQL_ROOT_PASSWORD}}
      DB_NAME: ${DB_NAME:-${MYSQL_DATABASE}}
      RABBIT_HOST: ${RABBIT_HOST:-rabbitmq}
      DISCORD_WEBHOOK: ${DISCORD_WEBHOOK:-}

  scheduler:
    build: ./scheduler
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - app-net
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST:-mysql}
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-${MYSQL_ROOT_PASSWORD}}
      DB_NAME: ${DB_NAME:-${MYSQL_DATABASE}}
      RABBIT_HOST: ${RABBIT_HOST:-rabbitmq}
      DISCORD_WEBHOOK: ${DISCORD_WEBHOOK:-}

volumes:
  mysql_data:

networks:
  app-net:
